!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var t=r();for(var n in t)("object"==typeof exports?exports:e)[n]=t[n]}}(this,function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var a in e)t.d(n,a,function(r){return e[r]}.bind(null,a));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=0)}([function(e,r,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");t(1),AFRAME.registerComponent("google-poly",{schema:{apiKey:{default:""},src:{},normalize:{type:"boolean",default:!0}},multiple:!1,init:function(){this.model=null},update:function(e){const r=this.el,t=this.data;t.src&&t.apiKey&&(this.remove(),this.getGLTFUrl(t.src,t.apiKey).then(this.loadPolyModel).then(e=>{this.model=e.scene||e.scenes[0],this.model.animations=e.animations,r.setObject3D("mesh",this.model),t.normalize&&this.normalize(),r.emit("model-loaded")}).catch(e=>{console.error('ERROR loading Google Poly model from "'+t.src+'" : '+e),r.emit("model-error",e)}))},normalize:function(){const e=this.el,r=e.getObject3D("mesh"),t=new THREE.Vector3,n=new THREE.Vector3,a=new THREE.Vector3;n.copy(e.object3D.position),a.copy(e.object3D.scale),e.object3D.scale.set(1,1,1),e.object3D.position.set(0,0,0),e.object3D.updateMatrixWorld(!0);const i=new THREE.Box3;i.setFromObject(r);const o=new THREE.Sphere;i.getBoundingSphere(o);const s=o.center,c=o.radius,u=1*(0===c?1:1/c);r.traverse(e=>{e.isMesh&&(e.geometry.scale(u,u,u),e.geometry.translate(-u*s.x+t.x,-u*s.y+t.y,-u*s.z+t.z),e.geometry.computeBoundingBox(),e.geometry.computeBoundingSphere())}),e.object3D.scale.copy(a),e.object3D.position.copy(n),e.object3D.updateMatrixWorld(!0)},_remove:function(){this.model&&this.el.removeObject3D("mesh")},remove:function(){this._remove()},getGLTFUrl:function(e,r){const t="https://poly.googleapis.com/v1/assets/"+e+"/?key="+r;return getUrlPromise=fetch(t).then(function(r){return r.json().catch(e=>(console.log('ERROR parsing Google Poly API server response JSON.\nRequested Model: "'+t+'"\nError: "'+JSON.stringify(e)+'"'),Promise.reject("Google Poly API server error. Check console for details."))).then(r=>{if(void 0!==r.error)return Promise.reject("Poly API error: "+r.error.message);const t=r.formats.find(e=>"GLTF"===e.formatType||"GLTF2"===e.formatType);if(t){const e=r.presentationParams.orientingRotation,n=new THREE.Quaternion(e.x||0,e.y||0,e.z||0,e.w||1);return{url:t.root.url,quaternion:n,format:t.formatType}}return Promise.reject("Poly asset id:"+e+" not provided in GLTF or GLTF2 format.")})})},loadPolyModel:function(e,r){const t=e.url,n=e.quaternion,a=e.format,i=(new THREE.Matrix4).makeRotationFromQuaternion(n);return new Promise((e,n)=>{const o=new THREE.FileLoader;o.setResponseType("arraybuffer"),o.load(t,r=>{try{console.log("loading",t,a);const o="GLTF"===a?new THREE.LegacyGLTFLoader:new THREE.GLTFLoader,s=THREE.LoaderUtils.extractUrlBase(t);o.parse(r,s,r=>{r.scene.traverse(function(e){"GLTF"===a&&e.material&&(e.material=new THREE.MeshStandardMaterial({vertexColors:THREE.VertexColors})),e.geometry&&e.geometry.applyMatrix(i)}),e(r)},n)}catch(e){console.error(e),n(e.constructor===Error?e:new Error("THREE.GLTFLoader: Unable to parse model."))}},r,n)})}})},function(e,r){THREE.LegacyGLTFLoader=function(){function e(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager}function r(){var e={};return{get:function(r){return e[r]},add:function(r,t){e[r]=t},remove:function(r){delete e[r]},removeAll:function(){e={}},update:function(r,t){for(var n in e){var a=e[n];a.update&&a.update(r,t)}}}}function t(e,r){var t={},n=e.material.uniforms;for(var a in n){var i=n[a];if(i.semantic){var o=i.node,s=e;o&&(s=r[o]),t[a]={semantic:i.semantic,sourceNode:s,targetNode:e,uniform:i}}}this.boundUniforms=t,this._m4=new THREE.Matrix4}e.prototype={constructor:e,crossOrigin:"anonymous",load:function(e,r,t,n){var a,i=this;a=void 0!==this.resourcePath?this.resourcePath:void 0!==this.path?this.path:THREE.LoaderUtils.extractUrlBase(e);var o=new THREE.FileLoader(i.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.load(e,function(e){i.parse(e,a,r)},t,n)},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){this.path=e},setResourcePath:function(e){return this.resourcePath=e,this},parse:function(e,r,t){var o,c={};THREE.LoaderUtils.decodeText(new Uint8Array(e,0,4))===i.magic?(c[n.KHR_BINARY_GLTF]=new s(e),o=c[n.KHR_BINARY_GLTF].content):o=THREE.LoaderUtils.decodeText(new Uint8Array(e));var u=JSON.parse(o);u.extensionsUsed&&u.extensionsUsed.indexOf(n.KHR_MATERIALS_COMMON)>=0&&(c[n.KHR_MATERIALS_COMMON]=new a(u)),new w(u,c,{crossOrigin:this.crossOrigin,manager:this.manager,path:r||this.resourcePath||""}).parse(function(e,r,n,a){t({scene:e,scenes:r,cameras:n,animations:a})})}},e.Shaders={update:function(){console.warn("THREE.LegacyGLTFLoader.Shaders has been deprecated, and now updates automatically.")}},t.prototype.update=function(e,r){var t=this.boundUniforms;for(var n in t){var a=t[n];switch(a.semantic){case"MODELVIEW":a.uniform.value.multiplyMatrices(r.matrixWorldInverse,a.sourceNode.matrixWorld);break;case"MODELVIEWINVERSETRANSPOSE":var i=a.uniform.value;this._m4.multiplyMatrices(r.matrixWorldInverse,a.sourceNode.matrixWorld),i.getNormalMatrix(this._m4);break;case"PROJECTION":a.uniform.value.copy(r.projectionMatrix);break;case"JOINTMATRIX":for(var o=a.uniform.value,s=0;s<o.length;s++)o[s].getInverse(a.sourceNode.matrixWorld).multiply(a.targetNode.skeleton.bones[s].matrixWorld).multiply(a.targetNode.skeleton.boneInverses[s]).multiply(a.targetNode.bindMatrix);break;default:console.warn("Unhandled shader semantic: "+a.semantic)}}},e.Animations={update:function(){console.warn("THREE.LegacyGLTFLoader.Animation has been deprecated. Use THREE.AnimationMixer instead.")}};var n={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_MATERIALS_COMMON:"KHR_materials_common"};function a(e){this.name=n.KHR_MATERIALS_COMMON,this.lights={};var r=(e.extensions&&e.extensions[n.KHR_MATERIALS_COMMON]||{}).lights||{};for(var t in r){var a,i=r[t],o=i[i.type],s=(new THREE.Color).fromArray(o.color);switch(i.type){case"directional":(a=new THREE.DirectionalLight(s)).position.set(0,0,1);break;case"point":a=new THREE.PointLight(s);break;case"spot":(a=new THREE.SpotLight(s)).position.set(0,0,1);break;case"ambient":a=new THREE.AmbientLight(s)}a&&(this.lights[t]=a)}}var i={magic:"glTF",version:1,contentFormat:0},o=20;function s(e){this.name=n.KHR_BINARY_GLTF;var r=new DataView(e,0,o),t={magic:THREE.LoaderUtils.decodeText(new Uint8Array(e.slice(0,4))),version:r.getUint32(4,!0),length:r.getUint32(8,!0),contentLength:r.getUint32(12,!0),contentFormat:r.getUint32(16,!0)};for(var a in i){var s=i[a];if(t[a]!==s)throw new Error('Unsupported glTF-Binary header: Expected "%s" to be "%s".',a,s)}var c=new Uint8Array(e,o,t.contentLength);this.header=t,this.content=THREE.LoaderUtils.decodeText(c),this.body=e.slice(o+t.contentLength,t.length)}s.prototype.loadShader=function(e,r){var t=r[e.extensions[n.KHR_BINARY_GLTF].bufferView],a=new Uint8Array(t);return THREE.LoaderUtils.decodeText(a)};var c={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,TRIANGLES:4,LINES:1,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,VERTEX_SHADER:35633,FRAGMENT_SHADER:35632},u={5126:Number,35675:THREE.Matrix3,35676:THREE.Matrix4,35664:THREE.Vector2,35665:THREE.Vector3,35666:THREE.Vector4,35678:THREE.Texture},d={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},l={9728:THREE.NearestFilter,9729:THREE.LinearFilter,9984:THREE.NearestMipmapNearestFilter,9985:THREE.LinearMipmapNearestFilter,9986:THREE.NearestMipmapLinearFilter,9987:THREE.LinearMipmapLinearFilter},E={33071:THREE.ClampToEdgeWrapping,33648:THREE.MirroredRepeatWrapping,10497:THREE.RepeatWrapping},p={6406:THREE.AlphaFormat,6407:THREE.RGBFormat,6408:THREE.RGBAFormat,6409:THREE.LuminanceFormat,6410:THREE.LuminanceAlphaFormat},f={5121:THREE.UnsignedByteType,32819:THREE.UnsignedShort4444Type,32820:THREE.UnsignedShort5551Type,33635:THREE.UnsignedShort565Type},m={1028:THREE.BackSide,1029:THREE.FrontSide},h={512:THREE.NeverDepth,513:THREE.LessDepth,514:THREE.EqualDepth,515:THREE.LessEqualDepth,516:THREE.GreaterEqualDepth,517:THREE.NotEqualDepth,518:THREE.GreaterEqualDepth,519:THREE.AlwaysDepth},T={32774:THREE.AddEquation,32778:THREE.SubtractEquation,32779:THREE.ReverseSubtractEquation},R={0:THREE.ZeroFactor,1:THREE.OneFactor,768:THREE.SrcColorFactor,769:THREE.OneMinusSrcColorFactor,770:THREE.SrcAlphaFactor,771:THREE.OneMinusSrcAlphaFactor,772:THREE.DstAlphaFactor,773:THREE.OneMinusDstAlphaFactor,774:THREE.DstColorFactor,775:THREE.OneMinusDstColorFactor,776:THREE.SrcAlphaSaturateFactor},v={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},y={scale:"scale",translation:"position",rotation:"quaternion"},H={LINEAR:THREE.InterpolateLinear,STEP:THREE.InterpolateDiscrete},b={2884:"CULL_FACE",2929:"DEPTH_TEST",3042:"BLEND",3089:"SCISSOR_TEST",32823:"POLYGON_OFFSET_FILL",32926:"SAMPLE_ALPHA_TO_COVERAGE"};function A(e,r,t){if(!e)return Promise.resolve();var n,a=[];if("[object Array]"===Object.prototype.toString.call(e)){n=[];for(var i=e.length,o=0;o<i;o++){(c=r.call(t||this,e[o],o))&&(a.push(c),c instanceof Promise?c.then(function(e,r){n[e]=r}.bind(this,o)):n[o]=c)}}else for(var s in n={},e){var c;if(e.hasOwnProperty(s))(c=r.call(t||this,e[s],s))&&(a.push(c),c instanceof Promise?c.then(function(e,r){n[e]=r}.bind(this,s)):n[s]=c)}return Promise.all(a).then(function(){return n})}function g(e,r){return"string"!=typeof e||""===e?"":/^(https?:)?\/\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:/^blob:.*$/i.test(e)?e:(r||"")+e}function L(e){this.isDeferredShaderMaterial=!0,this.params=e}function w(e,t,n){this.json=e||{},this.extensions=t||{},this.options=n||{},this.cache=new r}return L.prototype.create=function(){var e=THREE.UniformsUtils.clone(this.params.uniforms);for(var r in this.params.uniforms){var t=this.params.uniforms[r];t.value instanceof THREE.Texture&&(e[r].value=t.value,e[r].value.needsUpdate=!0),e[r].semantic=t.semantic,e[r].node=t.node}return this.params.uniforms=e,new THREE.RawShaderMaterial(this.params)},w.prototype._withDependencies=function(e){for(var r={},t=0;t<e.length;t++){var n=e[t],a="load"+n.charAt(0).toUpperCase()+n.slice(1),i=this.cache.get(n);if(void 0!==i)r[n]=i;else if(this[a]){var o=this[a]();this.cache.add(n,o),r[n]=o}}return A(r,function(e){return e})},w.prototype.parse=function(e){var r=this.json;this.cache.removeAll(),this._withDependencies(["scenes","cameras","animations"]).then(function(t){var n=[];for(var a in t.scenes)n.push(t.scenes[a]);var i=void 0!==r.scene?t.scenes[r.scene]:n[0],o=[];for(var a in t.cameras){var s=t.cameras[a];o.push(s)}var c=[];for(var a in t.animations)c.push(t.animations[a]);e(i,n,o,c)})},w.prototype.loadShaders=function(){var e=this.json,r=this.extensions,t=this.options;return this._withDependencies(["bufferViews"]).then(function(a){return A(e.shaders,function(e){return e.extensions&&e.extensions[n.KHR_BINARY_GLTF]?r[n.KHR_BINARY_GLTF].loadShader(e,a.bufferViews):new Promise(function(r){var n=new THREE.FileLoader(t.manager);n.setResponseType("text"),n.load(g(e.uri,t.path),function(e){r(e)})})})})},w.prototype.loadBuffers=function(){var e=this.json,r=this.extensions,t=this.options;return A(e.buffers,function(e,a){return"binary_glTF"===a?r[n.KHR_BINARY_GLTF].body:"arraybuffer"===e.type||void 0===e.type?new Promise(function(r){var n=new THREE.FileLoader(t.manager);n.setResponseType("arraybuffer"),n.load(g(e.uri,t.path),function(e){r(e)})}):void console.warn("THREE.LegacyGLTFLoader: "+e.type+" buffer type is not supported")})},w.prototype.loadBufferViews=function(){var e=this.json;return this._withDependencies(["buffers"]).then(function(r){return A(e.bufferViews,function(e){var t=r.buffers[e.buffer],n=void 0!==e.byteLength?e.byteLength:0;return t.slice(e.byteOffset,e.byteOffset+n)})})},w.prototype.loadAccessors=function(){var e=this.json;return this._withDependencies(["bufferViews"]).then(function(r){return A(e.accessors,function(e){var t=r.bufferViews[e.bufferView],n=v[e.type],a=d[e.componentType],i=a.BYTES_PER_ELEMENT,o=i*n;if(e.byteStride&&e.byteStride!==o){var s=new a(t),c=new THREE.InterleavedBuffer(s,e.byteStride/i);return new THREE.InterleavedBufferAttribute(c,n,e.byteOffset/i)}return s=new a(t,e.byteOffset,e.count*n),new THREE.BufferAttribute(s,n)})})},w.prototype.loadTextures=function(){var e=this.json,r=this.options;return this._withDependencies(["bufferViews"]).then(function(t){return A(e.textures,function(a){if(a.source)return new Promise(function(i){var o=e.images[a.source],s=o.uri,c=!1;if(o.extensions&&o.extensions[n.KHR_BINARY_GLTF]){var u=o.extensions[n.KHR_BINARY_GLTF],d=t.bufferViews[u.bufferView],m=new Blob([d],{type:u.mimeType});s=URL.createObjectURL(m),c=!0}var h=THREE.Loader.Handlers.get(s);null===h&&(h=new THREE.TextureLoader(r.manager)),h.setCrossOrigin(r.crossOrigin),h.load(g(s,r.path),function(r){if(c&&URL.revokeObjectURL(s),r.flipY=!1,void 0!==a.name&&(r.name=a.name),r.format=void 0!==a.format?p[a.format]:THREE.RGBAFormat,void 0!==a.internalFormat&&r.format!==p[a.internalFormat]&&console.warn("THREE.LegacyGLTFLoader: Three.js doesn't support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."),r.type=void 0!==a.type?f[a.type]:THREE.UnsignedByteType,a.sampler){var t=e.samplers[a.sampler];r.magFilter=l[t.magFilter]||THREE.LinearFilter,r.minFilter=l[t.minFilter]||THREE.NearestMipmapLinearFilter,r.wrapS=E[t.wrapS]||THREE.RepeatWrapping,r.wrapT=E[t.wrapT]||THREE.RepeatWrapping}i(r)},void 0,function(){c&&URL.revokeObjectURL(s),i()})})})})},w.prototype.loadMaterials=function(){var e=this.json;return this._withDependencies(["shaders","textures"]).then(function(r){return A(e.materials,function(t){var a,i,o={},s={};if(t.extensions&&t.extensions[n.KHR_MATERIALS_COMMON]&&(i=t.extensions[n.KHR_MATERIALS_COMMON]),i){var d=["ambient","emission","transparent","transparency","doubleSided"];switch(i.technique){case"BLINN":case"PHONG":a=THREE.MeshPhongMaterial,d.push("diffuse","specular","shininess");break;case"LAMBERT":a=THREE.MeshLambertMaterial,d.push("diffuse");break;case"CONSTANT":default:a=THREE.MeshBasicMaterial}d.forEach(function(e){void 0!==i.values[e]&&(o[e]=i.values[e])}),(i.doubleSided||o.doubleSided)&&(s.side=THREE.DoubleSide),(i.transparent||o.transparent)&&(s.transparent=!0,s.opacity=void 0!==o.transparency?o.transparency:1)}else if(void 0===t.technique)a=THREE.MeshPhongMaterial,Object.assign(o,t.values);else{a=L;var l=e.techniques[t.technique];s.uniforms={};var E=e.programs[l.program];if(E){s.fragmentShader=r.shaders[E.fragmentShader],s.fragmentShader||(console.warn("ERROR: Missing fragment shader definition:",E.fragmentShader),a=THREE.MeshPhongMaterial);var p=r.shaders[E.vertexShader];p||(console.warn("ERROR: Missing vertex shader definition:",E.vertexShader),a=THREE.MeshPhongMaterial),s.vertexShader=function(e,r){var t={};for(var n in r.attributes){var a=r.attributes[n],i=(l=r.parameters[a]).type,o=l.semantic;t[n]={type:i,semantic:o}}var s=r.parameters,c=r.attributes,u={};for(var n in t){var d=s[a=c[n]];(o=d.semantic)&&(u[n]=d)}for(var a in u){o=(l=u[a]).semantic;var l,E=new RegExp("\\b"+a+"\\b","g");switch(o){case"POSITION":e=e.replace(E,"position");break;case"NORMAL":e=e.replace(E,"normal");break;case"TEXCOORD_0":case"TEXCOORD0":case"TEXCOORD":e=e.replace(E,"uv");break;case"TEXCOORD_1":e=e.replace(E,"uv2");break;case"COLOR_0":case"COLOR0":case"COLOR":e=e.replace(E,"color");break;case"WEIGHT":e=e.replace(E,"skinWeight");break;case"JOINT":e=e.replace(E,"skinIndex")}}return e}(p,l);var f=l.uniforms;for(var v in f){var y=f[v],H=l.parameters[y],A=H.type;if(!u[A])throw new Error("Unknown shader uniform param type: "+A);var g,w=H.count;void 0!==t.values&&(g=t.values[y]);var O=new u[A],M=H.semantic,S=H.node;switch(A){case c.FLOAT:O=H.value,"transparency"==y&&(s.transparent=!0),void 0!==g&&(O=g);break;case c.FLOAT_VEC2:case c.FLOAT_VEC3:case c.FLOAT_VEC4:case c.FLOAT_MAT3:H&&H.value&&O.fromArray(H.value),g&&O.fromArray(g);break;case c.FLOAT_MAT2:console.warn("FLOAT_MAT2 is not a supported uniform type");break;case c.FLOAT_MAT4:if(w){O=new Array(w);for(var x=0;x<w;x++)O[x]=new u[A];if(H&&H.value){var _=H.value;O.fromArray(_)}g&&O.fromArray(g)}else{if(H&&H.value){var F=H.value;O.fromArray(F)}g&&O.fromArray(g)}break;case c.SAMPLER_2D:O=void 0!==g?r.textures[g]:void 0!==H.value?r.textures[H.value]:null}s.uniforms[v]={value:O,semantic:M,node:S}}for(var N=l.states||{},D=N.enable||[],C=N.functions||{},I=!1,k=!1,P=!1,j=0,U=D.length;j<U;j++){var G=D[j];switch(b[G]){case"CULL_FACE":I=!0;break;case"DEPTH_TEST":k=!0;break;case"BLEND":P=!0;break;case"SCISSOR_TEST":case"POLYGON_OFFSET_FILL":case"SAMPLE_ALPHA_TO_COVERAGE":break;default:throw new Error("Unknown technique.states.enable: "+G)}}s.side=I?void 0!==C.cullFace?m[C.cullFace]:THREE.FrontSide:THREE.DoubleSide,s.depthTest=k,s.depthFunc=void 0!==C.depthFunc?h[C.depthFunc]:THREE.LessDepth,s.depthWrite=void 0===C.depthMask||C.depthMask[0],s.blending=P?THREE.CustomBlending:THREE.NoBlending,s.transparent=P;var B=C.blendEquationSeparate;void 0!==B?(s.blendEquation=T[B[0]],s.blendEquationAlpha=T[B[1]]):(s.blendEquation=THREE.AddEquation,s.blendEquationAlpha=THREE.AddEquation);var V=C.blendFuncSeparate;void 0!==V?(s.blendSrc=R[V[0]],s.blendDst=R[V[1]],s.blendSrcAlpha=R[V[2]],s.blendDstAlpha=R[V[3]]):(s.blendSrc=THREE.OneFactor,s.blendDst=THREE.ZeroFactor,s.blendSrcAlpha=THREE.OneFactor,s.blendDstAlpha=THREE.ZeroFactor)}}Array.isArray(o.diffuse)?s.color=(new THREE.Color).fromArray(o.diffuse):"string"==typeof o.diffuse&&(s.map=r.textures[o.diffuse]),delete s.diffuse,"string"==typeof o.reflective&&(s.envMap=r.textures[o.reflective]),"string"==typeof o.bump&&(s.bumpMap=r.textures[o.bump]),Array.isArray(o.emission)?a===THREE.MeshBasicMaterial?s.color=(new THREE.Color).fromArray(o.emission):s.emissive=(new THREE.Color).fromArray(o.emission):"string"==typeof o.emission&&(a===THREE.MeshBasicMaterial?s.map=r.textures[o.emission]:s.emissiveMap=r.textures[o.emission]),Array.isArray(o.specular)?s.specular=(new THREE.Color).fromArray(o.specular):"string"==typeof o.specular&&(s.specularMap=r.textures[o.specular]),void 0!==o.shininess&&(s.shininess=o.shininess);var q=new a(s);return void 0!==t.name&&(q.name=t.name),q})})},w.prototype.loadMeshes=function(){var e=this.json;return this._withDependencies(["accessors","materials"]).then(function(r){return A(e.meshes,function(t){var n=new THREE.Group;void 0!==t.name&&(n.name=t.name),t.extras&&(n.userData=t.extras);var a=t.primitives||[];for(var i in a){var o=a[i];if(o.mode===c.TRIANGLES||void 0===o.mode){var s=new THREE.BufferGeometry,u=o.attributes;for(var d in u){if(!(m=u[d]))return;var l=r.accessors[m];switch(d){case"POSITION":s.addAttribute("position",l);break;case"NORMAL":s.addAttribute("normal",l);break;case"TEXCOORD_0":case"TEXCOORD0":case"TEXCOORD":s.addAttribute("uv",l);break;case"TEXCOORD_1":s.addAttribute("uv2",l);break;case"COLOR_0":case"COLOR0":case"COLOR":s.addAttribute("color",l);break;case"WEIGHT":s.addAttribute("skinWeight",l);break;case"JOINT":s.addAttribute("skinIndex",l);break;default:if(!o.material)break;if(!(f=e.materials[o.material]).technique)break;var E=e.techniques[f.technique].parameters||{};for(var p in E)E[p].semantic===d&&s.addAttribute(p,l)}}o.indices&&s.setIndex(r.accessors[o.indices]);var f=void 0!==r.materials?r.materials[o.material]:new THREE.MeshPhongMaterial({color:0,emissive:8947848,specular:0,shininess:0,transparent:!1,depthTest:!0,side:THREE.FrontSide});(h=new THREE.Mesh(s,f)).castShadow=!0,h.name="0"===i?n.name:n.name+i,o.extras&&(h.userData=o.extras),n.add(h)}else if(o.mode===c.LINES){s=new THREE.BufferGeometry,u=o.attributes;for(var d in u){var m;if(!(m=u[d]))return;l=r.accessors[m];switch(d){case"POSITION":s.addAttribute("position",l);break;case"COLOR_0":case"COLOR0":case"COLOR":s.addAttribute("color",l)}}var h;f=r.materials[o.material];o.indices?(s.setIndex(r.accessors[o.indices]),h=new THREE.LineSegments(s,f)):h=new THREE.Line(s,f),h.name="0"===i?n.name:n.name+i,o.extras&&(h.userData=o.extras),n.add(h)}else console.warn("Only triangular and line primitives are supported")}return n})})},w.prototype.loadCameras=function(){return A(this.json.cameras,function(e){if("perspective"==e.type&&e.perspective){var r=e.perspective.yfov,t=void 0!==e.perspective.aspectRatio?e.perspective.aspectRatio:1,n=r*t,a=new THREE.PerspectiveCamera(THREE.Math.radToDeg(n),t,e.perspective.znear||1,e.perspective.zfar||2e6);return void 0!==e.name&&(a.name=e.name),e.extras&&(a.userData=e.extras),a}if("orthographic"==e.type&&e.orthographic){a=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,e.orthographic.znear,e.orthographic.zfar);return void 0!==e.name&&(a.name=e.name),e.extras&&(a.userData=e.extras),a}})},w.prototype.loadSkins=function(){var e=this.json;return this._withDependencies(["accessors"]).then(function(r){return A(e.skins,function(e){var t=new THREE.Matrix4;return void 0!==e.bindShapeMatrix&&t.fromArray(e.bindShapeMatrix),{bindShapeMatrix:t,jointNames:e.jointNames,inverseBindMatrices:r.accessors[e.inverseBindMatrices]}})})},w.prototype.loadAnimations=function(){var e=this.json;return this._withDependencies(["accessors","nodes"]).then(function(r){return A(e.animations,function(e,t){var n=[];for(var a in e.channels){var i=e.channels[a],o=e.samplers[i.sampler];if(o){var s=i.target,c=s.id,u=void 0!==e.parameters?e.parameters[o.input]:o.input,d=void 0!==e.parameters?e.parameters[o.output]:o.output,l=r.accessors[u],E=r.accessors[d],p=r.nodes[c];if(p){p.updateMatrix(),p.matrixAutoUpdate=!0;var f=y[s.path]===y.rotation?THREE.QuaternionKeyframeTrack:THREE.VectorKeyframeTrack,m=p.name?p.name:p.uuid,h=void 0!==o.interpolation?H[o.interpolation]:THREE.InterpolateLinear;n.push(new f(m+"."+y[s.path],THREE.AnimationUtils.arraySlice(l.array,0),THREE.AnimationUtils.arraySlice(E.array,0),h))}}}c=void 0!==e.name?e.name:"animation_"+t;return new THREE.AnimationClip(c,void 0,n)})})},w.prototype.loadNodes=function(){var e=this.json,r=this.extensions,t=this;return A(e.nodes,function(e){var r,t=new THREE.Matrix4;return e.jointName?((r=new THREE.Bone).name=void 0!==e.name?e.name:e.jointName,r.jointName=e.jointName):(r=new THREE.Object3D,void 0!==e.name&&(r.name=e.name)),e.extras&&(r.userData=e.extras),void 0!==e.matrix?(t.fromArray(e.matrix),r.applyMatrix(t)):(void 0!==e.translation&&r.position.fromArray(e.translation),void 0!==e.rotation&&r.quaternion.fromArray(e.rotation),void 0!==e.scale&&r.scale.fromArray(e.scale)),r}).then(function(a){return t._withDependencies(["meshes","skins","cameras"]).then(function(t){return A(a,function(i,o){var s=e.nodes[o];if(void 0!==s.meshes)for(var c in s.meshes){var u=s.meshes[c],d=t.meshes[u];if(void 0!==d)for(var l in d.children){var E,p=d.children[l],f=p.material,m=p.geometry,h=p.userData,T=p.name;switch(f.isDeferredShaderMaterial?f=R=f.create():R=f,p.type){case"LineSegments":p=new THREE.LineSegments(m,R);break;case"LineLoop":p=new THREE.LineLoop(m,R);break;case"Line":p=new THREE.Line(m,R);break;default:p=new THREE.Mesh(m,R)}if(p.castShadow=!0,p.userData=h,p.name=T,s.skin&&(E=t.skins[s.skin]),E){var R,v=function(e){for(var r=Object.keys(a),t=0,n=r.length;t<n;t++){var i=a[r[t]];if(i.jointName===e)return i}return null},y=m;(R=f).skinning=!0,(p=new THREE.SkinnedMesh(y,R)).castShadow=!0,p.userData=h,p.name=T;for(var H=[],b=[],A=0,g=E.jointNames.length;A<g;A++){var L=E.jointNames[A],w=v(L);if(w){H.push(w);var O=E.inverseBindMatrices.array,M=(new THREE.Matrix4).fromArray(O,16*A);b.push(M)}else console.warn("WARNING: joint: '"+L+"' could not be found")}p.bind(new THREE.Skeleton(H,b),E.bindShapeMatrix);var S=function(r,t,n){var i=r[n];if(void 0!==i)for(var o=0,s=i.length;o<s;o++){var c=i[o],u=a[c],d=e.nodes[c];void 0!==u&&!0===u.isBone&&void 0!==d&&(t.add(u),S(d,u,"children"))}};S(s,p,"skeletons")}i.add(p)}else console.warn("LegacyGLTFLoader: Couldn't find node \""+u+'".')}if(void 0!==s.camera){var x=t.cameras[s.camera];i.add(x)}if(s.extensions&&s.extensions[n.KHR_MATERIALS_COMMON]&&s.extensions[n.KHR_MATERIALS_COMMON].light){var _=r[n.KHR_MATERIALS_COMMON].lights[s.extensions[n.KHR_MATERIALS_COMMON].light];i.add(_)}return i})})})},w.prototype.loadScenes=function(){var e=this.json;function r(t,n,a){var i=a[t];n.add(i);var o=e.nodes[t];if(o.children)for(var s=o.children,c=0,u=s.length;c<u;c++){r(s[c],i,a)}}return this._withDependencies(["nodes"]).then(function(n){return A(e.scenes,function(e){var a=new THREE.Scene;void 0!==e.name&&(a.name=e.name),e.extras&&(a.userData=e.extras);for(var i=e.nodes||[],o=0,s=i.length;o<s;o++){r(i[o],a,n.nodes)}return a.traverse(function(e){e.material&&e.material.isRawShaderMaterial&&(e.gltfShader=new t(e,n.nodes),e.onBeforeRender=function(e,r,t){this.gltfShader.update(r,t)})}),a})})},e}()}])});